/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rpggame.mapeditor;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.colorchooser.ColorSelectionModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import rpggame.models.DotType;
import rpggame.models.Map;
import rpggame.models.User;
import rpggame.net.client.MapeditorClient;

/**
 *
 * @author Andre
 */
public class MapEditorUI extends javax.swing.JFrame {
    public MapeditorClient client;
    public User user;
    /**
     * Creates new form MapEditorUI
     */
    public MapEditorUI() throws UnknownHostException, IOException {
        this.client = new MapeditorClient();
        LoginDialog loginDlg = new LoginDialog(this);
        loginDlg.setVisible(true);
        initComponents();
        if(user!=null && user.isPrivilegMapeditor()){
            this.setVisible(true);
            loadEditor();
        }
        else
        {
            close();
        }
        
    }
    private void loadMap(){
        Map map = (Map)jListMap.getSelectedValue();
        mappanel.setMap(map);
        
    }
    private void setDot(){
        mappanel.setDot(jColorChooser1.getColor(),DotType.dtWalkOn);
    }
    private void loadEditor() throws IOException{
        mappanel = new MapPanel(client);
        jScrollPane2.setViewportView(mappanel);
        pack();
        loadMapList();
    }
    private void loadMapList() throws IOException{
        Map[] maps = client.getMapList();
        jListMap.setListData(maps);
        for(Map map: maps)
            System.out.println(map.getId()+":"+map.getName());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListMap = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setLeftComponent(jColorChooser1);
        ColorSelectionModel model = jColorChooser1.getSelectionModel();
        ChangeListener changeListener = new ChangeListener() {
            public void stateChanged(ChangeEvent changeEvent) {
                loadMap();
                setDot();
            }
        };
        model.addChangeListener(changeListener);

        jListMap.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListMap.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMapMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListMap);

        jSplitPane2.setRightComponent(jScrollPane3);

        jSplitPane1.setLeftComponent(jSplitPane2);
        jSplitPane1.setRightComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListMapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMapMouseClicked
        loadMap();
    }//GEN-LAST:event_jListMapMouseClicked
    public void close() {
            WindowEvent wev = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wev);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MapEditorUI();
                } catch (UnknownHostException ex) {
                    Logger.getLogger(MapEditorUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MapEditorUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JList jListMap;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    // End of variables declaration//GEN-END:variables
    private MapPanel mappanel;
}
